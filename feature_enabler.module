<?php

/**
 * @file
 * Contains feature_enabler.module.
 */
use Drupal\feature_enabler\Controller\AccessServices;
use Drupal\feature_enabler\Controller\AddingServicesFeatures;

/**
 * Implements hook_entity_presave().
 */
function feature_enabler_entity_presave(Drupal\Core\Entity\EntityInterface $entity) {
  // handle feature access on save acces services term to enable or disable
  if ($entity->bundle() == 'access_services') {
    $service_name = $entity->field_access_id->value;
    $service_action = $entity->field_access_action->value;
    $service_type = $entity->field_services_type->value;
    $access_type = $entity->field_access_type->target_id;
    $active_access_type = \Drupal::config('feature_enabler.access_type')->get('type');
    if($active_access_type == $access_type){
      $accessservices = new AccessServices;
      $accessservices->handle_access_services($service_name,$service_action,$service_type);
    }
  }
}


/**
 * Implements feature enabler actions for selected type.
 */
function _handle_services_status() {
  $feature_enabler = \Drupal::config('feature_enabler.access_type');
  $select_type = $feature_enabler->get('type');
  // getting all service depending on selected type
  $query = \Drupal::database()->select('taxonomy_term__field_access_type', 't')
    ->fields('t', ['entity_id'])
    ->condition('field_access_type_target_id', $select_type);
  $query->condition('field_access_type_target_id', $select_type);
  $results = $query->execute();
  while ($content = $results->fetchAssoc()) {
    $tid = $content['entity_id'];
    $term = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->load($tid);
    $service_name = $term->get('field_access_id')->getValue()[0]['value'];
    $service_action = $term->get('field_access_action')->getValue()[0]['value'];
    $service_type = $term->get('field_services_type')->getValue()[0]['value'];
    $accessservices = new accessservices;
    $accessservices->handle_access_services($service_name,$service_action,$service_type);
  }
}
